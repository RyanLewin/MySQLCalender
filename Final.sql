SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS MODULES;
DROP TABLE IF EXISTS STAFF;
DROP TABLE IF EXISTS SESSIONTYPES;
DROP TABLE IF EXISTS SESSIONS;
DROP TABLE IF EXISTS ASSESSMENTS;
DROP TABLE IF EXISTS STUDENTS;
DROP TABLE IF EXISTS ENROLMENT;
DROP TABLE IF EXISTS SCHEDULE;
DROP TABLE IF EXISTS TUTORS;
DROP VIEW IF EXISTS TUTORIALS;
SET FOREIGN_KEY_CHECKS = 1;

/*Create Tables*/
CREATE TABLE STAFF (
  STAFFID FLOAT(2) NOT NULL AUTO_INCREMENT,
  STAFFNAME VARCHAR(20),
  EMAIL CHAR(25),
  OFFICENO CHAR(4),
  HOURS VARCHAR(20), 
  PHONENO FLOAT(4),
  PRIMARY KEY (STAFFID));
  
CREATE TABLE MODULES (
  MODULECODE CHAR(6) NOT NULL,
  MODULETITLE CHAR(20),
  MODULELEADERID FLOAT(2),
  FOREIGN KEY (MODULELEADERID) REFERENCES STAFF(STAFFID),
  PRIMARY KEY (MODULECODE));
  
CREATE TABLE TUTORS (
  STAFFID FLOAT(2) NOT NULL,
  MODULECODE CHAR(6) NOT NULL,
  FOREIGN KEY (STAFFID) REFERENCES STAFF(STAFFID),
  FOREIGN KEY (MODULECODE) REFERENCES MODULES(MODULECODE),
  PRIMARY KEY (STAFFID, MODULECODE));

CREATE TABLE SESSIONTYPES (
  SESSIONTYPE FLOAT(1) NOT NULL,
  DESCRIPTION CHAR(10),
  PRIMARY KEY (SESSIONTYPE));
  
CREATE TABLE SESSIONS (
  SESSIONID FLOAT(2) NOT NULL AUTO_INCREMENT,
  SESSIONTYPE FLOAT(1),
  MODULECODE CHAR(6) NOT NULL,
  SESSIONDAY CHAR(8),
  SESSIONTIME TIME,
  ROOM CHAR(5),
  DURATION FLOAT(4),
  FOREIGN KEY (SESSIONTYPE) REFERENCES SESSIONTYPES(SESSIONTYPE),
  FOREIGN KEY (MODULECODE) REFERENCES MODULES (MODULECODE),
  PRIMARY KEY (SESSIONID));

CREATE TABLE ASSESSMENTS (
  ASSESSCODE FLOAT(2) NOT NULL AUTO_INCREMENT,
  MODULECODE CHAR(6),
  ASSESSDESC VARCHAR(20),
  DUEDATE DATE,
  DUETIME TIME,
  FOREIGN KEY (MODULECODE) REFERENCES MODULES(MODULECODE),
  PRIMARY KEY (ASSESSCODE, MODULECODE));
  
 /* Check that the Assignment hand in date is after the current day*/
 delimiter |
 CREATE TRIGGER CHECKASSESSDATE
   BEFORE INSERT 
     ON ASSESSMENTS FOR EACH ROW 
	   BEGIN
		IF new.DUEDATE < CURRENT_DATE then
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'DUEDATE NEEDS TO BE AFTER TODAY';
		END IF;
	   END;
 |		
 delimiter ;
 /* Check for updates*/
 delimiter |
 CREATE TRIGGER CHECKASSESSDATEUPDATE
   BEFORE UPDATE 
     ON ASSESSMENTS FOR EACH ROW 
	   BEGIN
		IF new.DUEDATE < CURRENT_DATE then
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'DUEDATE NEEDS TO BE AFTER TODAY';
		END IF;
	   END;
 |		
 delimiter ;
  
CREATE TABLE STUDENTS (
  STUDENTID INTEGER(9) NOT NULL,
  PASSWORD VARCHAR(20),
  PRIMARY KEY (STUDENTID));
  
CREATE TABLE ENROLMENT (
  MODULECODE CHAR(6) NOT NULL,
  STUDENTNO INTEGER(9) NOT NULL,
  TUTORIALID FLOAT(2),
  FOREIGN KEY (MODULECODE) REFERENCES MODULES(MODULECODE),
  FOREIGN KEY (STUDENTNO) REFERENCES STUDENTS(STUDENTID),
  FOREIGN KEY (TUTORIALID) REFERENCES SESSIONS(SESSIONID),
  PRIMARY KEY (MODULECODE, STUDENTNO));
  
CREATE TABLE SCHEDULE (
  STUDENTNO INTEGER(9) NOT NULL,
  EVENT CHAR(20),
  EVENTTIME TIME,
  DURATION FLOAT(4),
  EVENTDATE DATE,
  FOREIGN KEY (STUDENTNO) REFERENCES STUDENTS(STUDENTID));
  
 /* Check that the Assignment hand in date is after the current day*/
 delimiter |
 CREATE TRIGGER CHECKSCHEDULEDATE
   BEFORE INSERT 
     ON SCHEDULE FOR EACH ROW 
	   BEGIN
		IF new.EVENTDATE < CURRENT_DATE then
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'EVENTDATE NEEDS TO BE AFTER TODAY';
		END IF;
	   END;
 |		
 delimiter ;
 /* Check for updates*/
 delimiter |
 CREATE TRIGGER CHECKSCHEDULEDATEUPDATE
   BEFORE UPDATE 
     ON SCHEDULE FOR EACH ROW 
	   BEGIN
		IF new.EVENTDATE < CURRENT_DATE then
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'DUEDATE NEEDS TO BE AFTER TODAY';
		END IF;
	   END;
 |		
 delimiter ;

/*Create a view of all the tutorial sessions*/
CREATE VIEW TUTORIALS AS
SELECT ENROLMENT.MODULECODE, ENROLMENT.STUDENTNO, SESSIONS.SESSIONID, 
    SESSIONS.SESSIONDAY, SESSIONS.SESSIONTIME, SESSIONS.DURATION, SESSIONS.ROOM
FROM ENROLMENT, SESSIONS
WHERE SESSIONS.SESSIONTYPE = '2'
AND ENROLMENT.MODULECODE = SESSIONS.MODULECODE;